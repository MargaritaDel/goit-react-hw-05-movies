{"version":3,"file":"static/js/219.e7995324.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","components/Error.js","components/Loader/Loader.jsx","services/FetchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  margin-top: 30px;\n  display: flex;\n  \n  gap: 40px;\n  flex-wrap: wrap;\n  border-radius: 8px;\nbox-shadow: 2px 1px 9px 0px #000000;\n`;\n\nexport const CastItem = styled.li`\n  width: 250px;\nborder-top: 1px solid grey;\n  border-bottom: 1px solid grey;\n  margin-top: 8px;\n  margin-bottom: 8px;\n  border-radius: 8px;\n  box-shadow: 2px 1px 9px 0px #000000;\n  align-items: center;\n  text-align: center;\n`;","import {Loader} from 'components/Loader/Loader';\nimport { Error } from 'components/Error';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'services/FetchApi';\nimport { CastItem, CastList } from './Cast.styled';\nimport { FaPortrait } from 'react-icons/fa';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    async function uploadCast(movieId) {\n      setIsLoading(true);\n      try {\n        const { cast } = await fetchCast(movieId);\n        if (!cast.length) {\n          throw new Error('No data');\n        } else {\n          setCast(cast);\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    uploadCast(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <Error>{error} There are not movies</Error>}\n      <CastList>\n        {cast.map(({ id, name, character, profile_path }) => {\n          return (\n            <CastItem key={id}>\n              {profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n                  alt={name}\n                />\n              ) : (\n                <FaPortrait\n                  style={{ display: 'block', width: '100%' }}\n                  color=\"rgb(60 80 60 )\"\n                  size={300}\n                />\n              )}\n              <p>{name}</p>\n              <p>{character}</p>\n            </CastItem>\n          );\n        })}\n      </CastList>\n    </>\n  );\n};\n\nexport default Cast;","import styled from 'styled-components';\n\nexport const Error = styled.div`\n  margin-top: 10px;\n  text-align: center;\n`;","import { MagnifyingGlass } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return (\n        <MagnifyingGlass\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"MagnifyingGlass-loading\"\n        wrapperClass=\"MagnifyingGlass-wrapper\"\n        glassColor = '#c0efff'\n        color = '#e15b64'\n        wrapperStyle={{\n            display: 'block',\n            marginTop: 20,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n          }}\n        />\n    );\n}","import axios from 'axios';\n\nconst API_KEY = 'c706b9e49acca8149f8445498f846084';\nconst API_PATH = 'https://api.themoviedb.org/3';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'week';\nconst LANGUAGE = 'en-US';\n\n\nexport async function fetchTrendMovies() {\n  const response = await axios.get(\n    `${API_PATH}/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n\nexport async function fetchSearch(searchQuery) {\n  const response = await axios.get(\n    `${API_PATH}/search/movie?api_key=${API_KEY}&language=${LANGUAGE}&query=${searchQuery}&page=1&include_adult=false`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n\nexport async function fetchMovie(movieId) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movieId}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n\nexport async function fetchReview(movieId) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movieId}/reviews?api_key=${API_KEY}&language=${LANGUAGE}&page=1`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n\nexport async function fetchCast(movieId) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movieId}/credits?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}"],"names":["CastList","styled","CastItem","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","error","setError","useEffect","fetchCast","length","Error","message","uploadCast","Loader","map","id","name","character","profile_path","src","alt","style","display","width","color","size","visible","height","ariaLabel","wrapperClass","glassColor","wrapperStyle","marginTop","marginLeft","marginRight","API_KEY","API_PATH","MEDIA_TYPE","TIME_WINDOW","LANGUAGE","fetchTrendMovies","axios","response","statusText","data","fetchSearch","searchQuery","fetchMovie","fetchReview"],"sourceRoot":""}