{"version":3,"file":"static/js/623.eb653888.chunk.js","mappings":"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","sources":["components/Error.js","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.js","pages/Movies.js","services/FetchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Error = styled.div`\n  margin-top: 10px;\n  text-align: center;\n`;","import { MagnifyingGlass } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return (\n        <MagnifyingGlass\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"MagnifyingGlass-loading\"\n        wrapperClass=\"MagnifyingGlass-wrapper\"\n        glassColor = '#c0efff'\n        color = '#e15b64'\n        wrapperStyle={{\n            display: 'block',\n            marginTop: 20,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n          }}\n        />\n    );\n}","import styled from 'styled-components';\n\nexport const MovieItem = styled.li`\npadding: 7px 20px;\nmax-width: 700px;\nborder-radius: 8px;\nbox-shadow: 2px 1px 9px 0px #000000;\ntransition: all 250ms linear;\ntext-decoration-line: none;\nlist-style-type: none; \nmargin-bottom:10px;\n&:hover,\n&:focus {\n  background-color: yellow;\n  color: blue;\n  transform: scale(1.01);\n  font-size: 16px;\n  font-weight: 500;\n}\n\n`;","import { Link, useLocation } from 'react-router-dom';\nimport { MovieItem } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <MovieItem key={id}>\n          <Link state={{ from: location }} to={`/movies/${id}`}>\n            {title}\n          </Link>\n        </MovieItem>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  width: 300px;\n`;\n\nexport const SearchInput = styled.input`\npadding: 4px;\nwidth: 400px;\nborder-radius: 8px;\nfont-size: 16px;\n&:focus {\n  background-color: yellow;\n  color: blue;\n}\n`;\n\nexport const SubmitButton = styled.button`\npadding: 4px 8px;\nborder-radius: 8px;\nfont-size: 16px;\n&:hover,\n&:focus {\n  color: blue;\n  background-color: yellow;\n}\n`;","import { FiSearch } from 'react-icons/fi';\nimport { SearchForm, SearchInput, SubmitButton } from './SearchForm.styled';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchFormSubmit = ({ onSubmit, query }) => {\n  const [queryOnChange, setQueryOnChange] = useState(query);\n\n\n\n  const handleChange = ({ target: { value } }) => {\n    setQueryOnChange(value);\n  \n  };\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    const inputValue = event.target.elements.search.value;\n    onSubmit(inputValue);\n  };\n\n  return (\n    <SearchForm onSubmit={handleOnSubmit}>\n      <SearchInput\n        onChange={handleChange}\n        name=\"search\"\n        value={queryOnChange}\n        type=\"search\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n      <SubmitButton type=\"submit\">\n        Search\n        <FiSearch />\n      </SubmitButton>\n    </SearchForm>\n  );\n};\n\nSearchFormSubmit.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n};\n\nexport default SearchFormSubmit;","import { useEffect, useState } from 'react';\nimport { fetchSearch } from 'services/FetchApi';\nimport { Error } from 'components/Error';\nimport {Loader} from 'components/Loader/Loader';\nimport SearchFormSubmit from 'components/SearchForm/SearchForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? '';\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (!query) return;\n    async function uploadMovies(query) {\n      setIsLoading(true);\n      try {\n        const data = await fetchSearch(query);\n        const movies = data.results;\n        if (!data.total_results) {\n          throw new Error('No data');\n        } else {\n          setMovies(movies);\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    uploadMovies(query);\n  }, [query]);\n\n  const onSubmit = inputValue => {\n    if (!inputValue) {\n      setSearchParams({});\n      setMovies([]);\n    } else {\n      setSearchParams({ query: inputValue });\n    }\n  };\n\n    return (\n        <div>\n        {error && <Error>{error} There are not movies</Error>}\n      <SearchFormSubmit onSubmit={onSubmit} query={query} />\n      {isLoading && <Loader />}\n      <MoviesList movies={movies} />\n      </div>\n    );\n  };\nexport default Movies;\n\n\n\n\n\n\n  \n\n  \n","import axios from 'axios';\n\nconst API_KEY = 'c706b9e49acca8149f8445498f846084';\nconst API_PATH = 'https://api.themoviedb.org/3';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'week';\nconst LANGUAGE = 'en-US';\n\n\nexport async function fetchTrendMovies() {\n  const response = await axios.get(\n    `${API_PATH}/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n\nexport async function fetchSearch(searchQuery) {\n  const response = await axios.get(\n    `${API_PATH}/search/movie?api_key=${API_KEY}&language=${LANGUAGE}&query=${searchQuery}&page=1&include_adult=false`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n\nexport async function fetchMovie(movieId) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movieId}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n\nexport async function fetchReview(movieId) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movieId}/reviews?api_key=${API_KEY}&language=${LANGUAGE}&page=1`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n\nexport async function fetchCast(movieId) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movieId}/credits?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}"],"names":["Error","styled","Loader","visible","height","width","ariaLabel","wrapperClass","glassColor","color","wrapperStyle","display","marginTop","marginLeft","marginRight","MovieItem","movies","location","useLocation","map","id","title","state","from","to","SearchForm","SearchInput","SubmitButton","onSubmit","query","useState","queryOnChange","setQueryOnChange","event","preventDefault","inputValue","target","elements","search","value","onChange","name","type","autoComplete","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","get","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchSearch","data","results","total_results","message","uploadMovies","MoviesList","API_KEY","API_PATH","MEDIA_TYPE","TIME_WINDOW","LANGUAGE","fetchTrendMovies","axios","response","statusText","searchQuery","fetchMovie","movieId","fetchReview","fetchCast"],"sourceRoot":""}