{"version":3,"file":"static/js/631.ff384fc6.chunk.js","mappings":"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","sources":["components/Error/Error.styled.js","components/Error/Error.js","components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js","services/FetchApi.js"],"sourcesContent":["import styled from 'styled-components';\nexport const PageNotFound = styled.h1`\ncolor: white;;\ntext-align: center;\nmargin-bottom:10px;\n}\n\n`;\n\nexport const PageNotFoundText = styled.h1`\ncolor: white;;\ntext-align: center;\nmargin-bottom:10px;\n}\n\n`;","\nimport {  useLocation } from 'react-router-dom';\nimport { PageNotFound, PageNotFoundText } from './Error.styled';\n\nconst Error = () => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <PageNotFound>Oops! Not Found</PageNotFound>\n      {location.state?.movieNotFound ? (\n        <PageNotFoundText>\n          Sorry, the movie you are looking for does not exist.\n        </PageNotFoundText>\n      ) : (\n        <PageNotFoundText>\n          Sorry, the page you are looking for does not exist.\n        </PageNotFoundText>\n      )}\n    </div>\n  );\n};\n\nexport default Error;","import { MagnifyingGlass } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return (\n        <MagnifyingGlass\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"MagnifyingGlass-loading\"\n        wrapperClass=\"MagnifyingGlass-wrapper\"\n        glassColor = '#c0efff'\n        color = '#e15b64'\n        wrapperStyle={{\n            display: 'block',\n            marginTop: 20,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n          }}\n        />\n    );\n}","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LinkButton = styled(Link)`\n  display: flex;\n  width: 300px;\n  height: 100px:\n  align-items: center;\n  font-size: 20px;\n  border: 1px solid #0d57aa;\n  border-radius: 6px;\n  margin-bottom: 8px;\n  text-align: center;\n  background-color: #b5d1f2;\n  transition: color 0.2s ease-in-out, background-color 0.2s ease-in-out;\n  &:hover,\n  &:focus {\n    background-color: yellow;\n    color: blue;\n\n`;\n\nexport const MovieInformation = styled.div`\n  @media screen and (min-width: 980px) {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n  }\n`;\n\nexport const MovieImg = styled.img`\n  width: 300px;\n`;\n\nexport const MovieInformationText = styled.div`\n  @media screen and (min-width: 980px) {\n    width: calc(100% - 300px - 20px);\n  }\n`;\n\nexport const GenresList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  gap: 12px;\n`;\n\nexport const MovieMoreInformation = styled.div`\n  margin: 0 -20px;\n  padding: 5px 20px;\n  box-shadow: rgb(0 0 0 / 20%) 0px 9px 9px -6px,\n    rgb(0 0 0 / 14%) 0px 9px 12px 0px, rgb(0 0 0 / 12%) 0px 3px 24px 0px;\n`;","import {Loader} from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport NotFound from '../../components/NotFound/NotFound';\nimport { Suspense} from 'react';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovie } from 'services/FetchApi';\nimport {\n  GenresList,\n  LinkButton,\n  MovieImg,\n  MovieInformation,\n  MovieInformationText,\n  MovieMoreInformation,\n} from './MovieDetails.styled';\nimport { TiArrowBackOutline } from 'react-icons/ti';\n// import { GiTargetPoster } from 'react-icons/gi';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const location = useLocation();\n  let locationValue = location.state;\n    if (location.state) {\n      locationValue = location.state.from;\n    }\n    const [from, setFrom] = useState(location.state?.from ?? \"/\");\n\n  useEffect(() => {\n    async function uploadMovie(movieId) {\n      setIsLoading(true);\n      try {\n        const movie = await fetchMovie(movieId);\n        if (!movie) {\n          throw new Error('No data');\n        } else {\n          setMovie(movie);\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    uploadMovie(movieId);\n  }, [movieId]);\n\n  const {\n    original_title,\n    release_date,\n    poster_path,\n    vote_average,\n    overview,\n    genres,\n  } = movie;\n\n  const year = release_date ? new Date(release_date).getFullYear() : '';\n  const userScore = vote_average ? Math.round(vote_average * 10) : '';\n\n  return (\n    <>\n    {poster_path && (\n  <LinkButton to={from} setFrom={setFrom} locationValue={locationValue}>\n    <TiArrowBackOutline />Go back\n  </LinkButton>\n)}\n      {isLoading && <Loader />}\n      {error ? (\n        <NotFound>{error} Sorry, we don't have that movie</NotFound>\n      ) : (\n        <MovieInformation>\n          {poster_path ? (\n            <MovieImg\n              src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n              alt={original_title}\n              width=\"300\"\n            />\n          ) : (\n            <p>Not found</p>\n          )}\n          <MovieInformationText>\n            <h1>\n              {original_title} {year ? `(${year})` : ''}\n            </h1>\n            <p>User score: {userScore ? `${userScore}%` : ''}</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <GenresList>\n              {genres &&\n                genres.map(({ name, id }) => <li key={id}>{name}</li>)}\n            </GenresList>\n          </MovieInformationText>\n        </MovieInformation>\n      )}\n      {error ? (\n  <p> </p>\n) : (\n  <>\n    <MovieInformation>\n    </MovieInformation>\n    {movie && (\n      <MovieMoreInformation>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"review\">Review</Link>\n          </li>\n        </ul>\n      </MovieMoreInformation>\n    )}\n    <Suspense>\n      <Outlet />\n    </Suspense>\n  </>\n)}\n    </>\n  );\n};\n\nexport default MovieDetails;\n\n\n","import axios from 'axios';\n\nconst API_KEY = 'c706b9e49acca8149f8445498f846084';\nconst API_PATH = 'https://api.themoviedb.org/3';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'week';\nconst LANGUAGE = 'en-US';\n\n\nexport async function fetchTrendMovies() {\n  const response = await axios.get(\n    `${API_PATH}/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n\nexport async function fetchSearch(searchQuery) {\n  const response = await axios.get(\n    `${API_PATH}/search/movie?api_key=${API_KEY}&language=${LANGUAGE}&query=${searchQuery}&page=1&include_adult=false`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n\nexport async function fetchMovie(movieId) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movieId}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n\nexport async function fetchReview(movieId) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movieId}/reviews?api_key=${API_KEY}&language=${LANGUAGE}&page=1`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}\n\nexport async function fetchCast(movieId) {\n  const response = await axios.get(\n    `${API_PATH}/movie/${movieId}/credits?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  if (response.statusText) {\n    throw new Error(response.statusText);\n  }\n  return response.data;\n}"],"names":["PageNotFound","styled","PageNotFoundText","location","useLocation","state","movieNotFound","Loader","visible","height","width","ariaLabel","wrapperClass","glassColor","color","wrapperStyle","display","marginTop","marginLeft","marginRight","LinkButton","Link","MovieInformation","MovieImg","MovieInformationText","GenresList","MovieMoreInformation","movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","error","setError","locationValue","from","setFrom","useEffect","fetchMovie","Error","message","uploadMovie","original_title","release_date","poster_path","vote_average","overview","genres","year","Date","getFullYear","userScore","Math","round","to","NotFound","src","alt","map","name","id","Suspense","API_KEY","API_PATH","MEDIA_TYPE","TIME_WINDOW","LANGUAGE","fetchTrendMovies","axios","response","statusText","data","fetchSearch","searchQuery","fetchReview","fetchCast"],"sourceRoot":""}